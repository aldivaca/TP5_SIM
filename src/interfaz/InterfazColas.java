/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import tp5.Fila;
import tp5.Logica;

/**
 *
 * @author cami
 */
public class InterfazColas extends javax.swing.JFrame {

    /**
     * Creates new form InterfazColas
     */
    Logica l = new Logica();
    Fila f = l.nuevaFila(null);

    DefaultTableModel modelo = new DefaultTableModel();
    ArrayList<Fila> ress = new ArrayList<>();

    public InterfazColas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private float convertDaysToMinutes(int day) {
        float minutes;
        minutes = day * 24 * 60;

        return minutes;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblSimular = new javax.swing.JLabel();
        txtSimular = new javax.swing.JTextField();
        lblDias = new javax.swing.JLabel();
        btnSimular = new javax.swing.JButton();
        lblDesde = new javax.swing.JLabel();
        txtDiaDesde = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtDiaHasta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPermanencia = new javax.swing.JTextField();
        txtNoAt = new javax.swing.JTextField();
        txtOcupacionT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableColas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cola", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        lblSimular.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblSimular.setText("Simular:");

        txtSimular.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        lblDias.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblDias.setText("días");

        btnSimular.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSimular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/start.png"))); // NOI18N
        btnSimular.setText("Simular");
        btnSimular.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSimular.setBorderPainted(false);
        btnSimular.setContentAreaFilled(false);
        btnSimular.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimular.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnSimular.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimularActionPerformed(evt);
            }
        });

        lblDesde.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblDesde.setText("Mostras desde día nro:");

        txtDiaDesde.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("hasta");

        txtDiaHasta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Promedio de permanencia en el laboratorio de un equipo:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Porcentaje de equipos que no pueden ser atendidos en el laboratorio:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Porcentaje de ocupación de los técnicos del laboratorio:");

        txtPermanencia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        txtNoAt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        txtOcupacionT.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSimular)
                    .addComponent(lblDesde))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSimular, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDias))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDiaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDiaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(96, 96, 96)
                .addComponent(btnSimular, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOcupacionT)
                    .addComponent(txtNoAt)
                    .addComponent(txtPermanencia, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtPermanencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNoAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtOcupacionT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSimular, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSimular)
                                    .addComponent(txtSimular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDias))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDesde)
                                    .addComponent(txtDiaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtDiaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblSimular.getAccessibleContext().setAccessibleDescription("");

        tableColas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reloj", "Evento", "Tiempo entre llegadas", "Proxima llegada", "Cola", "Estado S1", "Tiempo libre", "Estado S2", "Tiempo libre", "Tipo arreglo S1", "Tiempo arreglo S1 ", "Fin arreglo S1", "Suspendido S1", "Tipo arreglo S1", "Tiempo arreglo S2", "Fin arreglo S2", "Suspendido S2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableColas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimularActionPerformed

        Clear_Table();
        refreshTable();

        float tiempo = convertDaysToMinutes(Integer.parseInt(this.txtSimular.getText()));

        while (f.getReloj() <= tiempo) {
            
            f = l.nuevaFila(f);

            if (!"".equals(this.txtDiaDesde.getText())) {
                if (!"".equals(this.txtDiaHasta.getText())) {
                    float desde = convertDaysToMinutes(Integer.parseInt(this.txtDiaDesde.getText()));
                    float hasta = convertDaysToMinutes(Integer.parseInt(this.txtDiaHasta.getText()));
                    refreshTable(desde, hasta);
                }
            } else {
                refreshTable();
            }

        }

        if (!"".equals(this.txtDiaDesde.getText())) {
            if (!"".equals(this.txtDiaHasta.getText())) {
                float desde = convertDaysToMinutes(Integer.parseInt(this.txtDiaDesde.getText()));
                float hasta = convertDaysToMinutes(Integer.parseInt(this.txtDiaHasta.getText()));
                refreshTable(desde, hasta);
            }
        } else {
            refreshTable();
        }
        
        float rechazo= calcularPorcentajeRechazo();
        String r= ""+rechazo;
        this.txtNoAt.setText(r);
        
        this.txtOcupacionT.setText(""+porcentajeOcupacion());
    }//GEN-LAST:event_btnSimularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazColas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazColas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazColas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazColas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazColas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSimular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDesde;
    private javax.swing.JLabel lblDias;
    private javax.swing.JLabel lblSimular;
    private javax.swing.JTable tableColas;
    private javax.swing.JTextField txtDiaDesde;
    private javax.swing.JTextField txtDiaHasta;
    private javax.swing.JTextField txtNoAt;
    private javax.swing.JTextField txtOcupacionT;
    private javax.swing.JTextField txtPermanencia;
    private javax.swing.JTextField txtSimular;
    // End of variables declaration//GEN-END:variables

    private void refreshTable(float desde, float hasta) {
        Object[] res = new Object[17];
        modelo = (DefaultTableModel) this.tableColas.getModel();
        Fila f2;

        f2 = f;
        if (f2.getReloj() >= desde && f2.getReloj() <= hasta) {

            res[0] = f2.getReloj();
            res[1] = f2.getEvento();
            res[2] = f2.getLlegada().getTiempoLlegada();
            res[3] = f2.getLlegada().getProxLlegada();
            res[4] = f2.getCola();

            if (f2.getServ1().isOcupado()) {
                res[5] = "Ocupado";
            } else {
                res[5] = "Libre";
            }

            res[6] = f2.getServ1().gettLibre();
            if (f2.getServ2().isOcupado()) {
                res[7] = "Ocupado";
            } else {
                res[7] = "Libre";
            }

            res[8] = f2.getServ2().gettLibre();

            if (f2.getA1() != null) {
                switch (f2.getA1().getTipo()) {
                    case 1:
                        res[9] = "A";
                        break;
                    case 2:
                        res[9] = "B";
                        break;
                    case 3:
                        res[9] = "C";
                        break;
                    case 4:
                        res[9] = "D";
                        break;
                    case 5:
                        res[9] = "E";
                        break;
                    default:
                        res[9] = "-";

                }

                res[10] = f2.getA1().getTiempo();
                res[11] = f2.getA1().getFin();
                if (f2.getA1().isSuspendido()) {
                    res[12] = "Si";
                } else {
                    res[12] = "No";
                }
            }
            if (f2.getA2() != null) {
                switch (f2.getA2().getTipo()) {
                    case 1:
                        res[13] = "A";
                        break;
                    case 2:
                        res[13] = "B";
                        break;
                    case 3:
                        res[13] = "C";
                        break;
                    case 4:
                        res[13] = "D";
                        break;
                    case 5:
                        res[13] = "E";
                        break;
                    default:
                        res[13] = "-";

                }
                res[14] = f2.getA2().getTiempo();
                res[15] = f2.getA2().getFin();
                if (f2.getA2().isSuspendido()) {
                    res[16] = "Si";
                }
                res[16] = "No";

            }
            modelo.addRow(res);
        }

    }

    private void refreshTable() {

        Object[] res = new Object[17];
        modelo = (DefaultTableModel) this.tableColas.getModel();
        Fila f2;

        f2 = f;

        res[0] = f2.getReloj();
        res[1] = f2.getEvento();
        res[2] = f2.getLlegada().getTiempoLlegada();
        res[3] = f2.getLlegada().getProxLlegada();
        res[4] = f2.getCola();

        if (f2.getServ1().isOcupado()) {
            res[5] = "Ocupado";
        } else {
            res[5] = "Libre";
        }

        res[6] = f2.getServ1().gettLibre();
        if (f2.getServ2().isOcupado()) {
            res[7] = "Ocupado";
        } else {
            res[7] = "Libre";
        }

        res[8] = f2.getServ2().gettLibre();

        if (f2.getA1() != null) {
            switch (f2.getA1().getTipo()) {
                case 1:
                    res[9] = "A";
                    break;
                case 2:
                    res[9] = "B";
                    break;
                case 3:
                    res[9] = "C";
                    break;
                case 4:
                    res[9] = "D";
                    break;
                case 5:
                    res[9] = "E";
                    break;
                default:
                    res[9] = "-";

            }

            res[10] = f2.getA1().getTiempo();
            res[11] = f2.getA1().getFin();
            if (f2.getA1().isSuspendido()) {
                res[12] = "Si";
            } else {
                res[12] = "No";
            }
        }
        if (f2.getA2() != null) {
            switch (f2.getA2().getTipo()) {
                case 1:
                    res[13] = "A";
                    break;
                case 2:
                    res[13] = "B";
                    break;
                case 3:
                    res[13] = "C";
                    break;
                case 4:
                    res[13] = "D";
                    break;
                case 5:
                    res[13] = "E";
                    break;
                default:
                    res[13] = "-";

            }
            res[14] = f2.getA2().getTiempo();
            res[15] = f2.getA2().getFin();
            if (f2.getA2().isSuspendido()) 
            {
                res[16] = "Si";
            }
            else
            {
                res[16] = "No";
            }
            

        }
        modelo.addRow(res);

    }

    private void Clear_Table() {
        modelo.setRowCount(0);
        tableColas.revalidate();
        tableColas.repaint();
//        modelo = (DefaultTableModel) this.tblSimulacion.getModel();
//        for (int i = 0; i < tblSimulacion.getRowCount(); i++) {
//            modelo.removeRow(i);
//            i -= 1;
    }
    
    private float calcularPorcentajeRechazo()
    {
        float res;
        res= (f.getRechazos()*100)/f.getContadorTotal();
        System.out.println("r"+ f.getRechazos());
        return res;
    }
    
    private float porcentajeOcupacion()
    {
        float ocupacion1= f.getReloj()-f.getServ1().gettLibre();
        float ocupacion2= f.getReloj()-f.getServ2().gettLibre();
        float prom= (ocupacion1+ocupacion2)/2;
        float porcentaje= prom*100/f.getReloj();
        return porcentaje;
    }
}
